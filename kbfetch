#!/usr/bin/env python
import typer
import requests
import os
import json
import mimetypes
from typing_extensions import Annotated

app = typer.Typer()

BASE_URL = os.environ.get("KBFETCH_BASE_URL", "http://localhost:8000")

@app.command()
def upload(file_path: Annotated[str, typer.Argument(help="Path to the document file to upload.")]):
    """
    Upload a document to the knowledge base.
    """
    url = f"{BASE_URL}/upload"
    
    mime_type, _ = mimetypes.guess_type(file_path)
    if mime_type is None:
        mime_type = "application/octet-stream"

    with open(file_path, "rb") as f:
        files = {"file": (os.path.basename(file_path), f, mime_type)}
        try:
            response = requests.post(url, files=files)
            response.raise_for_status()
            print(json.dumps(response.json(), indent=2))
        except requests.exceptions.RequestException as e:
            print(f"Error uploading document: {e}")

@app.command()
def query(query_text: Annotated[str, typer.Argument(help="The text query for the knowledge base.")]):
    """
    Query the knowledge base.
    """
    url = f"{BASE_URL}/query"
    headers = {"Content-Type": "application/json"}
    try:
        response = requests.post(url, headers=headers, json={"q": query_text})
        response.raise_for_status()
        data = response.json()
        if "results" in data:
            print(data["results"])
        else:
            print(json.dumps(data, indent=2))
    except requests.exceptions.RequestException as e:
        print(f"Error querying knowledge base: {e}")

if __name__ == "__main__":
    app()
